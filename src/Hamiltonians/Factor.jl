struct SIMDCheck{T} end


"""
Main function that generated the expression for the energy factor term
This factor is used for the generated function below
The reason this is a seperate function is for debugging
"""

const unweighted_expr_sp = "-gstate[gadj.rowval[idx]]"
const weighted_expr_sp = "-gstate[gadj.rowval[idx]] * gadj.nzval[idx]"
const mag_expr = "-bfield(g)[idx]"

function getEFacExprSparse(stype::Type{<:SType}, T) 
    weighted = getSParam(stype, :Weighted)
    magfield =  getSParam(stype, :Magfield)

    expr = "begin
        efactor = Float32(0)
        @turbo check_empty = $T for idx in nzrange(gadj, idx)
            efactor += $(weighted ? weighted_expr_sp : unweighted_expr_sp) 
        end
        return efactor $(magfield*mag_expr)
    end"

    return Meta.parse(expr)
end
getEFacExprSparse(st::SType) = getEFacExprSparse(typeof(st))
export getEFacExprSparse


#= Main Energy Factor Function =#
"""
Get the energy factor (where we define E === σ_i Σ_j fac_j) for the state
the function is dispatched on the graph g, the idx i and the type of the Hamiltonian
which may be generated by the function HType(Symbs...).
"""

@generated function getEFactor(g, gstate, gadj::SparseMatrixCSC, idx, stype::SType, sc::SIMDCheck{T})::Float32 where T

    exp = getEFacExprSparse(stype, T)

    return exp
end
export getEFactor