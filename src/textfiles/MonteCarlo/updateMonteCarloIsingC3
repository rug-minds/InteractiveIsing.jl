function updateMonteCarloIsingC()
    @inline function deltE(efac,newstate,oldstate)
        return efac*(newstate-oldstate)
    end
    
    @inline function sampleCState()::Float32
        Float32(2.) *(rand(rng,Float32)- Float32(.5))
    end

    beta = 1/(TIs[])

    idx = rand(rng, g_iterator)
     
    oldstate = @inbounds g.state[idx]

    efactor = getE(g,idx)

    randnum = rand(rng,Float32)

    newstate = Float32(2.) * randnum - Float32(.5)
    
    Ediff = deltE(efactor,newstate,oldstate)
    if (Ediff < 0 || randnum < exp(-beta*Ediff))
        @inbounds g.state[idx] = newstate 
    end
end